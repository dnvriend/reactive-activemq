# Copyright 2016 Dennis Vriend
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

akka {
  stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = off
  loglevel = debug
  log-dead-letters = off
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  # Loggers are created and registered synchronously during ActorSystem
  # start-up, and since they are actors, this timeout is used to bound the
  # waiting time
  logger-startup-timeout = 15s

  extensions = ["akka.stream.integration.activemq.extension.ActiveMqExtension"]

  actor {
    debug {
      receive = off // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }

  test {
    # factor by which to scale timeouts during tests, e.g. to account for shared
    # build system load
    timefactor =  1.0

    # duration of EventFilter.intercept waits after the block is finished until
    # all required messages are received
    filter-leeway = 3s

    # duration to wait in expectMsg and friends outside of within() block
    # by default
    single-expect-default = 60m

    # The timeout that is added as an implicit by DefaultTimeout trait
    default-timeout = 5s
  }
}

reactive-activemq {
  connections = ["amq"]
}

amq {
  transport = "nio"
  host = "localhost"
  host = ${?ACTIVEMQ_HOST}
  port = "61616"
  user = "admin"
  pass = "adminactivemq"
}

PersonConsumer {
  conn = "amq"
  queue = "Person"
  concurrentConsumers = "1"
}

PersonProducer {
  conn = "amq"
  topic = "Person"
}

PersonCopyProducer {
  conn = "amq"
  topic = "PersonCopy"
}

AckBidiFlowTestInput {
  conn = "amq"
  topic = "AckBidiFlowInput"
  queue = "AckBidiFlowInput"
  concurrentConsumers = "1"
}

AckBidiFlowTestOutput {
  conn = "amq"
  topic = "AckBidiFlowOutput"
  queue = "AckBidiFlowOutput"
  concurrentConsumers = "1"
}

AckBidiFlowReqRespTestInput {
  conn = "amq"
  topic = "AckBidiFlowReqRespTestInput"
  queue = "AckBidiFlowReqRespTestInput"
  reply-to = "VirtualTopic.AckBidiFlowReqRespTestOutput"
  concurrentConsumers = "1"
}

AckBidiFlowReqRespTestOutput {
  conn = "amq"
  queue = "AckBidiFlowReqRespTestOutput"
  concurrentConsumers = "1"
}
